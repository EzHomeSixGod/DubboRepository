<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd


						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.1.xsd 


						http://www.springframework.org/schema/cache 
						http://www.springframework.org/schema/cache/spring-cache-4.2.xsd    
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!-- 开启redis注解支持 -->
    <cache:annotation-driven /> 
    
    <!-- 自动扫描Spring注解配置  并保证@Required,@Autowired的属性被注入--> 
    <context:component-scan base-package="com.ezhomesixgod.*">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <tx:annotation-driven/>

	<!-- 自动加载属性配置文件 -->
<!-- 	<context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>  -->
     <!-- 加载配置文件数据 -->
    <bean class="com.ezhomesixgod.config.EncryptPropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:jdbc.properties</value>
                <value>classpath*:redis.properties</value>
            </list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>
    
	<bean id="slf4j-filter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
        <property name="statementExecutableSqlLogEnable" value="true"/>
    </bean>

    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="3000"/>
        <property name="logSlowSql" value="true"/>
    </bean>
    
    <!-- 配置数据源：使用阿里的druid方式   支持大数据实时查询和分析的高容错、高性能开源分布式系统--> 
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${userName}" />
        <property name="password" value="${password}" />
        <property name="initialSize" value="${initialSize}" />
        <property name="minIdle" value="${minIdle}" />
        <property name="maxActive" value="${maxActive}" />
        <property name="maxWait" value="${maxWait}" />
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 'x' FROM DUAL" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="poolPreparedStatements" value="true" />
        <property name="connectionInitSqls" value="set names utf8mb4;"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter"/>
                <ref bean="slf4j-filter"/>
            </list>
        </property>
    </bean>
 
   <!--&lt;!&ndash; spring和MyBatis完美整合，不需要mybatis的配置映射文件 &ndash;&gt;  -->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  -->
        <!--<property name="dataSource" ref="dataSource" />-->
        <!--<property name="configLocation" value="com/ezhomesixgod/mapper"></property>-->
        <!--&lt;!&ndash;  自动扫描mapping.xml文件   &ndash;&gt;-->
        <!--<property name="mapperLocations" value="classpath:xml/*.xml"></property>-->
        <!--&lt;!&ndash;设置pageHelper分页&ndash;&gt;-->
        <!--<property name="typeAliasesPackage" value="com.ezhomesixgod.model"/>-->
	    <!--<property name="plugins">-->
	        <!--<array>-->
	            <!--<bean class="com.github.pagehelper.PageInterceptor">-->
	                <!--&lt;!&ndash; 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 &ndash;&gt;-->
	                <!--<property name="properties">-->
	                    <!--<value>-->
	                        <!--&lt;!&ndash; 数据库类型 &ndash;&gt;-->
	                        <!--helperDialect=mysql-->
	                        <!--&lt;!&ndash; 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 &ndash;&gt;-->
                            <!--&lt;!&ndash; 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 &ndash;&gt;-->
	                        <!--reasonable=false-->
	                        <!--&lt;!&ndash; 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 &ndash;&gt;-->
                            <!--&lt;!&ndash; 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值 &ndash;&gt;-->
	                        <!--params=count=countSql-->
	                        <!--autoRuntimeDialect=true-->
	                    <!--</value>-->
	                <!--</property>-->
	            <!--</bean>-->
	        <!--</array>-->
	    <!--</property>-->
    <!--</bean> -->
	
   <!--&lt;!&ndash; 通用mapper接口注入到Spring &ndash;&gt;-->
   <!--<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">-->
	    <!--<property name="basePackage" value="com.ezhomesixgod.mapper" />-->
	<!---->
   <!--</bean>-->

 
     <!-- (配置事务管理) --> 
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

    <!--配置事务管理操作类-->
    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <!--注入事务管理-->
        <property name="transactionManager" ref="transactionManager"/>
        <!--定义事务隔离级别，这里-1代表默认-->
        <property name="isolationLevel" value="-1"/>
        <!--配置传播行为，0代表PROPAGATION_REQUIRED-->
        <property name="propagationBehavior" value="0"/>
        <!--由于进行读写操作，所以这里的只读设置为false，默认也是false，所以可以不用设置-->
        <property name="readOnly" value="false"/>
    </bean>


    <!--&lt;!&ndash; 引入redis缓存配置文件&ndash;&gt;-->
    <import resource="classpath:spring-redis.xml" />

    <!-- 引入线程池配置文件-->
    <import resource="classpath:spring-pool.xml" />

    <import resource="classpath:provider.xml" />
</beans>