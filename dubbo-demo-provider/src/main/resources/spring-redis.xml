<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">


	<!-- redis配置 -->
	<!-- <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>  -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >
          <property name="maxIdle" value="${redis.maxIdle}" />
          <property name="maxWaitMillis" value="${redis.maxWait}" />
          <property name="testOnBorrow" value="${redis.testOnBorrow}" />
            <property name="maxTotal" value="${redis.maxTotal}"/>
        <property name="minEvictableIdleTimeMillis" value="${redis.maxWaitMillis}"/>
        <property name="blockWhenExhausted" value="${redis.blockWhenExhausted}"/>
     </bean >
	<!-- redis服务器中心 -->
    <bean id="connectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >
          <property name="poolConfig" ref="poolConfig" />
          <property name="port" value="${redis.port}" />
          <property name="hostName" value="${redis.host}" />
          <property name="password" value="${redis.password}" />
          <property name="timeout" value="${redis.timeout}" ></property>
    </bean >
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
          <property name="connectionFactory" ref="connectionFactory" />
          <property name="keySerializer" >
              <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
          </property>
        <property name="valueSerializer" >
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>
        </property>

        <property name="enableTransactionSupport" value="true"/>

    </bean>


    <!--redis 消息队列监听器配置-->
    <!--<bean id="redisMessageListener" class="com.share.app.listener.RedisListener">-->
        <!--<property name="redisTemplate" ref="redisTemplate"/>-->
    <!--</bean>-->

    <!--redis 消息队列发布订阅模式配置-->
    <bean id="redisContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>
        <!--<property name="messageListeners">-->
            <!--<map>-->
                <!--<entry key-ref="redisMessageListener">-->
                    <!--<list>-->
                        <!--&lt;!&ndash; 普通订阅，订阅具体的频道 &ndash;&gt;-->
                        <!--<bean class="org.springframework.data.redis.listener.ChannelTopic">-->
                            <!--<constructor-arg value="topic.channel" />-->
                        <!--</bean>-->
                        <!--&lt;!&ndash; 模式订阅，支持模式匹配订阅，*为模糊匹配符 &ndash;&gt;-->
                        <!--<bean class="org.springframework.data.redis.listener.PatternTopic">-->
                            <!--<constructor-arg value="topic.*" />-->
                        <!--</bean>-->
                        <!--&lt;!&ndash; 匹配所有频道 &ndash;&gt;-->
                        <!--<bean class="org.springframework.data.redis.listener.PatternTopic">-->
                            <!--<constructor-arg value="*" />-->
                        <!--</bean>-->
                    <!--</list>-->
                <!--</entry>-->

            <!--</map>-->
        <!--</property>-->


    </bean>

    <!-- redis集群配置 哨兵模式 -->
    <!-- <bean id="sentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <property name="master">
            <bean class="org.springframework.data.redis.connection.RedisNode">
                这个值要和Sentinel中指定的master的值一致，不然启动时找不到Sentinel会报错的
                <property name="name" value="mymaster"></property>
            </bean>
        </property>
        记住了,这里是指定Sentinel的IP和端口，不是Master和Slave的
        <property name="sentinels">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.sentinel.host1}"></constructor-arg>
                    <constructor-arg name="port" value="${redis.sentinel.port1}"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.sentinel.host2}"></constructor-arg>
                    <constructor-arg name="port" value="${redis.sentinel.port2}"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.sentinel.host3}"></constructor-arg>
                    <constructor-arg name="port" value="${redis.sentinel.port3}"></constructor-arg>
                </bean>
            </set>
        </property>
    </bean>
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg name="sentinelConfig" ref="sentinelConfiguration"></constructor-arg>
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>
    </bean> -->


    <!-- 配置缓存 -->  
    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">  
       <constructor-arg ref="redisTemplate" />  
    </bean> 
</beans> 